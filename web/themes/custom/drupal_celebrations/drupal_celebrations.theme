<?php

use Drupal\Component\Utility\Html;
use Drupal\node\Entity\Node;
use Drupal\node\NodeInterface;

/**
 * Implements hook_preprocess_block().
 */
function drupal_celebrations_preprocess_block(&$variables) {
  $variables['title_attributes']['class'][] = 'block__title';
  // Add a class indicating the custom block bundle.
  if (isset($variables['elements']['content']['#block_content'])) {
    $variables['attributes']['class'][] = Html::getClass('block-type-' . $variables['elements']['content']['#block_content']->bundle());
  }
}

/**
 * Implements hook_theme_suggestions_HOOK_alter() for block templates.
 */
function drupal_celebrations_theme_suggestions_block_alter(array &$suggestions, array $variables) {
  // Block suggestions for custom block bundles.
  if (isset($variables['elements']['content']['#block_content'])) {
    array_splice($suggestions, 1, 0, 'block__bundle__' . $variables['elements']['content']['#block_content']->bundle());
  }
}

/**
 * Implements hook_preprocess_node().
 */
function drupal_celebrations_preprocess_node(&$variables) {
  /** @var $node Node */
  $node = $variables['node'];
  if ($node->hasField('field_hero') && !$node->get('field_hero')->isEmpty()) {
    unset($variables['label']);
  }
}

/**
 * Implements hook_preprocess_paragraph().
 */
function drupal_celebrations_preprocess_paragraph__hero(&$variables) {
  $request = \Drupal::request();
  $route_match = \Drupal::routeMatch();
  $variables['title'] = [
    '#type' => 'page_title',
    '#title' => \Drupal::service('title_resolver')->getTitle($request, $route_match->getRouteObject()),
  ];
  $variables['#cache']['contexts'][] = 'url';
}
